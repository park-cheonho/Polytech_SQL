DESC DEPT;

ALTER TABLE DEPT MODIFY (DNAME varchar2(20));
ALTER TABLE DEPT MODIFY (LOC varchar2(50));
DESC DEPT;

INSERT INTO DEPT VALUES(50,'LAB1','SEOUL');
INSERT INTO DEPT(DEPTNO,DNAME,LOC) VALUES(51,'LAB2','SAPPORO');
SELECT * FROM DEPT ORDER BY DEPTNO;

ROLLBACK;

DELETE FROM DEPT WHERE(DEPTNO = 50);


-- DML SUBQUERY
-- // 부서별로 보너스를 계산한후(데이터 연산) INSERT 작업
INSERT INTO BONUS(ENAME,JOB,SAL,COMM)SELECT ENAME, JOB,SAL,COMM FROM EMP;
SELECT * FROM BONUS;
ROLLBACK;
SELECT * FROM BONUS;

INSERT INTO BONUS (ENAME,JOB,SAL,COMM)
SELECT ENAME,JOB,SAL,DECODE(DEPTNO,10,SAL*0.3,20,SAL*0.2)+NVL(COMM,0) 
FROM EMP WHERE DEPTNO IN (10,20);
SELECT * FROM BONUS;
ROLLBACK;

-- // 평상시에 COMM을 받지 못하는 사원들에게 평균 COMM 금액의 50%를 보너스로 지급
UPDATE EMP SET COMM = (SELECT AVG(COMM)/2 FROM EMP) 
WHERE COMM IS NULL OR COMM = 0;
SELECT * FROM EMP;
-- // 평균 이상의 급여를 받는 사원들은 보너스 지급 대상자에서 제외
DELETE FROM BONUS WHERE SAL > (SELECT AVG(SAL) FROM EMP ; 
ROLLBACK;

-- 스칼라 서브 쿼리
SELECT DEPTNO,ENAME,JOB,SAL,(SELECT ROUND(AVG(SAL),0) 
FROM EMP S WHERE S.JOB=M.JOB) AS JOB_AVG_SAL 
FROM EMP M ORDER BY JOB; 
-- IV로 JOIN해서 같은 결과 만들기

--TRANSACTION 
ROLLBACK;
INSERT INTO DEPT(DEPTNO,DNAME,LOC) VALUES(90,'신규사업부','경기도');
UPDATE EMP SET DEPTNO = 90 WHERE DEPTNO = 30; 
DELETE FROM DEPT WHERE DEPTNO = 30; 
SELECT * FROM DEPT;
SELECT * FROM EMP WHERE DEPTNO = 30;
ROLLBACK;
SELECT * FROM DEPT;
SELECT * FROM EMP WHERE DEPTNO = 30;

--// TRANSACTION 종료후 ROLLBACK 처리범위 
INSERT INTO EMP(EMPNO,ENAME,JOB,SAL) VALUES(1111,'오라클','DBA',3500); -- TRANSACTION START
UPDATE EMP SET SAL = SAL* 1.3;
COMMIT;
ROLLBACK WORK;
SELECT * FROM EMP;

--// TRANSACTION 과 DDL 

-- 

select * from emp;
